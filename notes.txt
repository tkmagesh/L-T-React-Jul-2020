RIA (Rich Internet Applications)


ES6 (ESNext, ES2015)
1. let
2. const
3. Array destructuring
4. Rest operator (array)
5. Spread operator (array)
6. Object destructuring
7. Rest operator (object)
8. Spread operator (object)
9. Default arguments
10. Arrow functions
11. Template strings
12. Object construction
13. class


HTML  & JSX

HTML - Just open tag is allowed (<br>, <hr>)
JSX - Every open tag must have the corresponding close tag (<hr/>, <br/>)

HTML - use the 'class' attribute for css styles
JSX - use 'className' instead of 'class'

HTML - use the 'for' attribute for label
JSX - use 'htmlFor' instead of 'for'

State
    UI State
        data that supports the presentation logic
        Very very unlikely that other components might be interested in ths state
        Can be kept in the component

    App State
        data that supports the core business logic
        Very very LIKELY that the whole application might be interested in this state
        SHOULD BE KEPT AWAY from the component


    Store
        Manages the application state for the whole application
        Single Point of contact for any application state in the application
        APIs
            - getState()
            - subscribe(callback)
            
    create-react-app
    node.js module

npm & yarn -> package managers in node.js

windows
npm install yarn -g

npx create-react-app my-app

ES6 modules
    Anything defined in a JS file is considered private
    Anything public should be explicity exported
    Anything from outside has to be explicity imported

Application Folder structure
src
    /bugTracker
        /actions
            addNew.js
            toggle.js
        /views
            BugStats.js
            BugEdit.js
        index.js (BugTracker component)

    /reducers
        bugsReducer.js

    /store
        index.js

to install redux
> yarn add redux